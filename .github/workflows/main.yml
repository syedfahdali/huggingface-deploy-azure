name: Trigger auto deployment for demo-container

env:
  AZURE_CONTAINER_APP_NAME: demo-container
  AZURE_GROUP_NAME: myresourcegroup
  AZURE_CONTAINER_REGISTRY: mlopscookbook2.azurecr.io
  RESOURCE_LOCATION: eastus  # change as needed
  CONTAINER_PORT: 80         # change as needed

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Azure Container Registry (ACR)
        uses: docker/login-action@v1
        with:
          registry: ${{ env.AZURE_CONTAINER_REGISTRY }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Set repo env
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Build and push container image to ACR
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.REPO }}:${{ github.sha }}
          file: ./Dockerfile

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set repo env
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Deploy to Azure Container App
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az config set extension.use_dynamic_install=yes_without_prompt

            echo "Checking if Container App exists..."
            EXISTS=$(az containerapp show -n ${{ env.AZURE_CONTAINER_APP_NAME }} -g ${{ env.AZURE_GROUP_NAME }} --query "name" -o tsv || echo "")

            if [ -z "$EXISTS" ]; then
              echo "Creating Container App..."
              az containerapp create \
                --name ${{ env.AZURE_CONTAINER_APP_NAME }} \
                --resource-group ${{ env.AZURE_GROUP_NAME }} \
                --image ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.REPO }}:${{ github.sha }} \
                --target-port ${{ env.CONTAINER_PORT }} \
                --environment <YOUR_CONTAINER_APP_ENV_NAME> \
                --registry-server ${{ env.AZURE_CONTAINER_REGISTRY }} \
                --registry-username ${{ secrets.ACR_USERNAME }} \
                --registry-password ${{ secrets.ACR_PASSWORD }} \
                --cpu 2 --memory 4Gi \
                --location ${{ env.RESOURCE_LOCATION }} \
                --ingress external
            else
              echo "Updating existing Container App..."
              az containerapp update \
                -n ${{ env.AZURE_CONTAINER_APP_NAME }} \
                -g ${{ env.AZURE_GROUP_NAME }} \
                --image ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.REPO }}:${{ github.sha }}
            fi
